{"version":3,"file":"static/js/257.c1509791.chunk.js","mappings":"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","sources":["components/API.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n// Trending\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f9bf05506ad1ee4c133a8c572dbb21a2';\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n\n  return data.results;\n}\n// Find MOVIE by id\nasync function getMovieById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n// Find CAST by id\nasync function getCastById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n// Find REVIEWS by id\nasync function getReviewsById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n}\n\n// Find MOVIES by Name\nasync function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return data.results;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n  getMoviesByQuery,\n};\n","import styled from 'styled-components';\nexport const Section = styled.section`\n  display: flex;\n  padding-left: 15px;\n  padding-right: 15px;\n  flex-direction: column;\n  margin-bottom: auto;\n  gap: 20px;\n  @media screen and (min-width: 450px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    justify-items: stretch;\n  }\n`;\nexport const Image = styled.img`\n  height: 400px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const Title = styled.h2`\n  color: #363d43;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 1rem;\n  font-weight: 600;\n  line-height: 1.5rem;\n  letter-spacing: 0.02em;\n`;\nexport const Text = styled.p`\n  color: #363d43;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 1rem;\n  font-weight: 500;\n  line-height: 1.2rem;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: #051805;\n  text-decoration: none;\n  padding: 7px 20px;\n  margin: 20px 15px;\n\n  text-align: center;\n  border-radius: 5px;\n  border: 0px;\n  color: rgb(239, 239, 239);\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-size: 14px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { getMovieById } from 'components/API';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Section, Image, Title, Text, Button } from './MovieDetails.styled';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/dogs');\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setIsLoading(true);\n        const newMovie = await getMovieById(movieId);\n        setMovie(newMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  const {\n    id,\n    poster_path,\n    genres,\n    title,\n    vote_average,\n    overview,\n    production_companies,\n    release_date,\n  } = movie;\n\n  const rating = vote_average?.toFixed(1);\n  const genresList = genres?.map(genre => genre.name).join(',  ');\n  const year = release_date?.toString().slice(0, 4);\n  const companies = production_companies\n    ?.map(company => company.name)\n    .join(',  ');\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <Button type=\"button\">\n          <HiOutlineArrowNarrowLeft\n            style={{\n              marginRight: '10px',\n            }}\n          />\n          Back\n        </Button>\n      </Link>\n      {isLoading && <p>Loading... {isLoading}</p>}\n      <Section key={id}>\n        <Image\n          src={\n            poster_path\n              ? 'https://image.tmdb.org/t/p/w500' + poster_path\n              : 'https://lands-tube.it.landsd.gov.hk/AVideo/view/img/notfound_portrait.jpg'\n          }\n          alt={title}\n        />\n        <div>\n          <Title>{title}</Title>\n          <Text>\n            <b>Rating:</b> {rating}\n          </Text>\n          <Text>\n            <b>Genres: </b> {genresList}\n          </Text>\n          <Text>\n            Produced in <b>{year}</b> by {companies}\n          </Text>\n          <Text>{overview}</Text>\n          <Link to={`cast`}>\n            <Button type=\"button\">Cast</Button>\n          </Link>\n          <Link to={`reviews`}>\n            <Button type=\"button\">Reviews</Button>\n          </Link>\n        </div>\n      </Section>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY","getTrending","page","axios","data","results","getMovieById","movieId","getCastById","cast","getReviewsById","getMoviesByQuery","searchQuery","Section","styled","Image","Title","Text","Button","useParams","useState","movie","setMovie","isLoading","setIsLoading","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","newMovie","console","log","getMovieDetails","id","poster_path","genres","title","vote_average","overview","production_companies","release_date","rating","toFixed","genresList","map","genre","name","join","year","toString","slice","companies","company","Link","to","current","type","style","marginRight","src","alt","Suspense","fallback"],"sourceRoot":""}