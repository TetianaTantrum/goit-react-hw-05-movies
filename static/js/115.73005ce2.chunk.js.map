{"version":3,"file":"static/js/115.73005ce2.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAM,mCAAZ,SACeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA2BC,GAA3B,yFACyBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,uCACqBC,EADrB,iBACiCE,EADjC,oBADzB,uBACUE,EADV,EACUA,KADV,kBAKSA,EAAKC,SALd,2EAQeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA4BC,GAA5B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,oBACkBP,EADlB,8CADzB,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,2EAOeI,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA2BD,GAA3B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,4BAC0BP,EAD1B,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,EAAKK,MAJd,2EAOeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA8BH,GAA9B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,4BAC0BP,EAD1B,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,EAAKC,SAJd,2EAQeM,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,yFACyBT,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,iCAC2CY,EAD3C,gCADzB,uBACUR,EADV,EACUA,KADV,kBAISA,EAAKC,SAJd,kE,yGChCaQ,EAASC,EAAAA,GAAAA,OAAH,icAkBNC,EAAYD,EAAAA,GAAAA,GAAH,iN,mICfdE,EAAcC,EAAQ,MAAtBD,UA+CR,UA7Ca,WACX,IAAQT,EAAYS,IAAZT,QACR,GAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BZ,EAAAA,EAAAA,IAAYD,GAFtC,OAEUc,EAFV,OAGIF,GAAQ,OAAIE,IAHhB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACjB,KAGF,gCACE,SAAC,IAAD,oBACA,SAAC,KAAD,UACGE,EAAKgB,KAAI,YAAwD,IAArDC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACEJ,EACI,kCAAoCA,EACpC,sGAENK,IAAKJ,KAEP,UAAC,KAAD,oBAAcA,MACd,UAAC,KAAD,YACE,sCADF,IACqBC,MAErB,UAAC,KAAD,YACE,qCADF,IACoBC,OAdXJ,EAkBd,QAIR,C","sources":["components/API.jsx","components/Trends.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n// Trending\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f9bf05506ad1ee4c133a8c572dbb21a2';\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n\n  return data.results;\n}\n// Find MOVIE by id\nasync function getMovieById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n// Find CAST by id\nasync function getCastById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n// Find REVIEWS by id\nasync function getReviewsById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n}\n\n// Find MOVIES by Name\nasync function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return data.results;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n  getMoviesByQuery,\n};\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #05683f;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const MainTitle = styled.h1`\n  color: #363d43;\n  margin-left: 30px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1.5rem;\n  letter-spacing: 0.04em;\n`;\n","import { useState, useEffect } from 'react';\nimport { getCastById } from '../../components/API';\nimport { MainTitle } from '../../components/Trends.styled';\nimport { Gallery, Image, Item, Title, Text } from '../Movies/Movies.styled';\n\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const newCast = await getCastById(movieId);\n        setCast([...newCast]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <section>\n      <MainTitle>Cast</MainTitle>\n      <Gallery>\n        {cast.map(({ id, profile_path, name, character, popularity }) => {\n          return (\n            <Item key={id}>\n              <Image\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXhmA5lk66rH2bXOz9r3otg3lvKh71xXA_cQ&usqp=CAU'\n                }\n                alt={name}\n              />\n              <Title>Name: {name}</Title>\n              <Text>\n                <b>Character:</b> {character}\n              </Text>\n              <Text>\n                <b> Rating: </b> {popularity}\n              </Text>\n            </Item>\n          );\n        })}\n      </Gallery>\n    </section>\n  );\n};\nexport default Cast;\n"],"names":["BASE_URL","KEY","getTrending","page","axios","data","results","getMovieById","movieId","getCastById","cast","getReviewsById","getMoviesByQuery","searchQuery","Footer","styled","MainTitle","useParams","require","useState","setCast","useEffect","newCast","console","log","getCast","map","id","profile_path","name","character","popularity","src","alt"],"sourceRoot":""}