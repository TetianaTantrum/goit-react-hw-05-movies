{"version":3,"file":"static/js/278.c6a178db.chunk.js","mappings":"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","sources":["components/API.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.jsx"],"sourcesContent":["import axios from 'axios';\n// Trending\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f9bf05506ad1ee4c133a8c572dbb21a2';\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n\n  return data.results;\n}\n// Find MOVIE by id\nasync function getMovieById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n// Find CAST by id\nasync function getCastById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n// Find REVIEWS by id\nasync function getReviewsById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n}\n\n// Find MOVIES by Name\nasync function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return data.results;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n  getMoviesByQuery,\n};\n","import { useState, useEffect } from 'react';\nimport { NavLink, Link, useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'components/API';\nimport {\n  Form,\n  Input,\n  Button,\n  Gallery,\n  Item,\n  Image,\n  Title,\n  Text,\n} from './Movies.styled';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\nimport { BsSearch } from 'react-icons/bs';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  // const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return setSearchParams({});\n    }\n\n    async function getMovie() {\n      try {\n        const searchedMovies = await getMoviesByQuery(query);\n        setMovies(searchedMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setSearchParams({ query });\n    getMovie();\n  }, [query, setSearchParams]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.input.value });\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <NavLink\n        to=\"/\"\n        style={{\n          textDecoration: 'none',\n          padding: '7px 20px',\n          maxWidth: '100px',\n          textAlign: 'center',\n          borderRadius: '5px',\n          border: '0px',\n          color: 'rgb(239, 239, 239)',\n          fontFamily: 'Verdana, Geneva, Tahoma, sans-serif',\n          fontSize: '14px',\n          opacity: '0.6',\n          transition: 'opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s',\n          cursor: 'pointer',\n          display: 'block',\n          marginTop: '20px',\n          marginBottom: '20px',\n          backgroundColor: '#051805',\n        }}\n      >\n        <HiOutlineArrowNarrowLeft\n          style={{\n            marginRight: '10px',\n          }}\n        />\n        Back\n      </NavLink>\n      <Form onSubmit={onFormSubmit}>\n        <Input type=\"text\" name=\"input\" />\n        <Button>\n          <BsSearch\n            style={{\n              marginRight: '10px',\n            }}\n          />\n          Search\n        </Button>\n      </Form>\n      <Gallery>\n        {movies.map(\n          ({ id, poster_path, title, vote_average, release_date }) => {\n            const rating = vote_average?.toFixed(1);\n            return (\n              <Item key={id}>\n                <Link to={`/movies/${id}`}>\n                  <Image\n                    src={\n                      poster_path\n                        ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                        : 'https://lands-tube.it.landsd.gov.hk/AVideo/view/img/notfound_portrait.jpg'\n                    }\n                    alt={title}\n                  />\n                  <Title>\n                    {title} | {release_date?.toString().slice(0, 4)}\n                  </Title>\n                  <Text>\n                    <b>Average: </b>\n                    {rating}\n                  </Text>\n                </Link>\n              </Item>\n            );\n          }\n        )}\n      </Gallery>\n    </div>\n  );\n};\nexport default MovieSearch;\n","import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 3fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  max-height: 400px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const Title = styled.h2`\n  color: #363d43;\n  margin-left: 15px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5rem;\n  letter-spacing: 0.02em;\n`;\n\nexport const Text = styled.p`\n  color: #363d43;\n  margin-left: 15px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.2rem;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 7px;\n  padding-right: 7px;\n  width: 50%;\n  height: 30px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  margin-right: 10px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus {\n    outline: none;\n    border-color: #074207;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    align-items: center;\n  }\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: #051805;\n  text-decoration: none;\n  padding: 7px 20px;\n  text-align: center;\n  border-radius: 5px;\n  margin-left: 15px;\n  border: 0px;\n  color: rgb(239, 239, 239);\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-size: 14px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n"],"names":["BASE_URL","KEY","getTrending","page","axios","data","results","getMovieById","movieId","getCastById","cast","getReviewsById","getMoviesByQuery","searchQuery","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","searchedMovies","console","log","getMovie","NavLink","to","style","textDecoration","padding","maxWidth","textAlign","borderRadius","border","color","fontFamily","fontSize","opacity","transition","cursor","display","marginTop","marginBottom","backgroundColor","marginRight","onSubmit","e","preventDefault","target","input","value","reset","type","name","map","id","poster_path","title","vote_average","release_date","rating","toFixed","Link","src","alt","toString","slice","Gallery","styled","Item","Image","Title","Text","Form","Input","Button"],"sourceRoot":""}