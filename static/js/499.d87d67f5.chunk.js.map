{"version":3,"file":"static/js/499.d87d67f5.chunk.js","mappings":"mTAEMA,EAAW,gCACXC,EAAM,mCAAZ,SACeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA2BC,GAA3B,yFACyBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,uCACqBC,EADrB,iBACiCE,EADjC,oBADzB,uBACUE,EADV,EACUA,KADV,kBAKSA,EAAKC,SALd,2EAQeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA4BC,GAA5B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,oBACkBP,EADlB,8CADzB,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,2EAOeI,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA2BD,GAA3B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,4BAC0BP,EAD1B,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,EAAKK,MAJd,2EAOeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA8BH,GAA9B,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDQ,EADC,4BAC0BP,EAD1B,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,EAAKC,SAJd,2EAQeM,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,yFACyBT,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,iCAC2CY,EAD3C,gCADzB,uBACUR,EADV,EACUA,KADV,kBAISA,EAAKC,SAJd,kE,yGChCaQ,EAASC,EAAAA,GAAAA,OAAH,icAkBNC,EAAYD,EAAAA,GAAAA,GAAH,iN,sQClBTE,EAAUF,EAAAA,GAAAA,GAAH,wRAYPG,EAAOH,EAAAA,GAAAA,GAAH,kLAMJI,EAAQJ,EAAAA,GAAAA,IAAH,wNAULK,EAAQL,EAAAA,GAAAA,GAAH,kNAULM,EAAON,EAAAA,GAAAA,EAAH,uLAQJO,EAAOP,EAAAA,GAAAA,KAAH,2IAOJQ,EAAQR,EAAAA,GAAAA,MAAH,ymBA2BLS,EAAST,EAAAA,GAAAA,OAAH,gc,2LChFNU,EAAOV,EAAAA,GAAAA,GAAH,wGAOJG,EAAOH,EAAAA,GAAAA,GAAH,0GAMJW,EAAYX,EAAAA,GAAAA,IAAH,kKAQTI,EAAQJ,EAAAA,GAAAA,IAAH,mM,SCjBVY,EAAcC,EAAQ,MAAtBD,UA6CR,EA3CgB,WACd,IAAQnB,EAAYmB,IAAZnB,QACR,GAA8BqB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE6BrB,EAAAA,EAAAA,IAAeH,GAF5C,OAEUyB,EAFV,OAGIF,GAAW,OAAIE,IAHnB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAAC5B,KAEF,gCACE,SAAC,IAAD,sBACA,SAACiB,EAAD,UACGK,EAAQO,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACvC,OACE,UAACvB,EAAD,YACE,UAACQ,EAAD,YACE,SAACP,EAAD,CACEuB,IACEF,EACI,2BAA6BA,EAC7B,sGAENG,IAAKJ,KAEP,SAAC,KAAD,UAAQA,QAEV,UAAC,KAAD,YACE,mCADF,IACkBE,OAbTH,EAiBd,QAIR,C","sources":["components/API.jsx","components/Trends.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n// Trending\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f9bf05506ad1ee4c133a8c572dbb21a2';\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n\n  return data.results;\n}\n// Find MOVIE by id\nasync function getMovieById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n// Find CAST by id\nasync function getCastById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n// Find REVIEWS by id\nasync function getReviewsById(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n}\n\n// Find MOVIES by Name\nasync function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return data.results;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getCastById,\n  getReviewsById,\n  getMoviesByQuery,\n};\n","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #05683f;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const MainTitle = styled.h1`\n  color: #363d43;\n  margin-left: 30px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 22px;\n  font-weight: 600;\n  line-height: 1.5rem;\n  letter-spacing: 0.04em;\n`;\n","import styled from 'styled-components';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 3fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  max-height: 400px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const Title = styled.h2`\n  color: #363d43;\n  margin-left: 15px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5rem;\n  letter-spacing: 0.02em;\n`;\n\nexport const Text = styled.p`\n  color: #363d43;\n  margin-left: 15px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.2rem;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 7px;\n  padding-right: 7px;\n  width: 50%;\n  height: 30px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  margin-right: 10px;\n  font-family: Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus {\n    outline: none;\n    border-color: #074207;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    align-items: center;\n  }\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: #051805;\n  text-decoration: none;\n  padding: 7px 20px;\n  text-align: center;\n  border-radius: 5px;\n  margin-left: 15px;\n  border: 0px;\n  color: rgb(239, 239, 239);\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-size: 14px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: left;\n  gap: 16px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  justify-items: stretch;\n  gap: 10px;\n`;\nexport const Image = styled.img`\n  width: 120px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getReviewsById } from '../../components/API';\nimport { MainTitle } from '../../components/Trends.styled';\nimport { Title, Text } from '../Movies/Movies.styled';\nimport { List, Container, Item, Image } from './Reviews.styled';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const newReviews = await getReviewsById(movieId);\n        setReviews([...newReviews]);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n  return (\n    <section>\n      <MainTitle>Review</MainTitle>\n      <List>\n        {reviews.map(({ id, author, avatar_path, content }) => {\n          return (\n            <Item key={id}>\n              <Container>\n                <Image\n                  src={\n                    avatar_path\n                      ? 'https://image.tmdb.org/t' + avatar_path\n                      : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXhmA5lk66rH2bXOz9r3otg3lvKh71xXA_cQ&usqp=CAU'\n                  }\n                  alt={author}\n                />\n                <Title>{author}</Title>\n              </Container>\n              <Text>\n                <b>Review:</b> {content}\n              </Text>\n            </Item>\n          );\n        })}\n      </List>\n    </section>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","KEY","getTrending","page","axios","data","results","getMovieById","movieId","getCastById","cast","getReviewsById","getMoviesByQuery","searchQuery","Footer","styled","MainTitle","Gallery","Item","Image","Title","Text","Form","Input","Button","List","Container","useParams","require","useState","reviews","setReviews","useEffect","newReviews","console","log","getReviews","map","id","author","avatar_path","content","src","alt"],"sourceRoot":""}